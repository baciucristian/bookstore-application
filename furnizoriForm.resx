<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>