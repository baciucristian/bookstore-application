<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        v37/D9iSx01n4eSKAAAAAElFTkSuQmCC
</value>
  </data>
</root>