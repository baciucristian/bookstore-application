<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6xcAAAAASUVORK5CYII=
</value>
  </data>
</root>